//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Mechanic.Core.Project.Models.Json
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// A product in the catalog
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.3.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class MechanicProject
    {
        /// <summary>
        /// A user defined identifier for the project, in reverse-DNS. For example: com.yak3d.Terminus.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^[a-zA-Z][a-zA-Z0-9]*(\.[a-zA-Z][a-zA-Z0-9]*)+$")]
        public string Id { get; set; }

        /// <summary>
        /// List of files tracked by the project
        /// </summary>
        [Newtonsoft.Json.JsonProperty("sourceFiles", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<SourceFiles> SourceFiles { get; set; } = new System.Collections.ObjectModel.Collection<SourceFiles>();

        /// <summary>
        /// List of files tracked by the project that are in the game folder. These files must be generated or exist permanently.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("gameFiles", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<GameFiles> GameFiles { get; set; } = new System.Collections.ObjectModel.Collection<GameFiles>();



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.3.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SourceFiles : File
    {
        /// <summary>
        /// Denotes the filetype for the source file.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("fileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SourceFilesFileType FileType { get; set; }

        /// <summary>
        /// A list of output file IDs that are spawned from this source file
        /// </summary>
        [Newtonsoft.Json.JsonProperty("destinationPaths", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> DestinationPaths { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.3.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GameFiles : File
    {
        /// <summary>
        /// Denotes the filetype for the game file.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("fileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GameFilesFileType FileType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.3.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class File
    {
        /// <summary>
        /// The identifier for the file, which is a UUID v4
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}")]
        public string Id { get; set; }

        /// <summary>
        /// Relative path to the file
        /// </summary>
        [Newtonsoft.Json.JsonProperty("path", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Path { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.3.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum SourceFilesFileType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"FBX")]
        FBX = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"BLEND")]
        BLEND = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"TIFF")]
        TIFF = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"WAV")]
        WAV = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"PSC")]
        PSC = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"OTHER")]
        OTHER = 5,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.3.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public enum GameFilesFileType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MAT")]
        MAT = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"DDS")]
        DDS = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"WEM")]
        WEM = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"PEX")]
        PEX = 3,


    }
}